//公用配置,所有子项目共享
subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'eclipse-wtp'	//所有子项目都必须要使用eclipse-wtp插件，不然导入到eclipse中各项目无法互相依赖
    apply plugin: 'maven'	//maven插件
//	apply plugin: 'hotFix'
	
	sourceCompatibility = 1.7
	group = 'com.yangsai'
    version = '2.0'

	//compileJava {
	    //enable compilation in a separate daemon process
	    //options.fork = true
	
	    //enable incremental compilation
	    //options.incremental = true
	//}
	
	
    repositories {
       mavenLocal()
       mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    jar {
        manifest {
        	//jar文件里的MANIFEST.MF文件信息配置
        	attributes 	'Provider': 'gradle',
						'Implementation-Title': project.name,
						'Implementation-Version': version,
						'Main-Class': ''
						
        }
        
    }
    
    //解决由于java文件中文乱码无法编译通过的问题
    tasks.withType(JavaCompile) { 
    	options.encoding = "UTF-8" 
    }
    
    //配置jar发布的仓库地址
    uploadArchives {
    	repositories {
       		flatDir {
           		dirs 'repos'	//本地仓库
       		}
       		mavenDeployer {
	        	repository(url: "file://localhost/tmp/myRepo/")
	        }
    	}
	}
	
	eclipse {
		project {
			//linkedResource name: 'bin', type: '2', location: project(':cap-web').projectDir.path + '/src/main/webapp/WEB-INF/classes'
		}
		
		classpath {
	    	//defaultOutputDir = file('build-eclipse-file')
		}
	}
}

//生成补丁（增量）文件，目前是需要将增量文件名列表拷贝到hotFix.txt中，后面考虑自己读取svn或git的提交记录
task generateHotFix << {
    println project.projectDir
    File readme = new File("$project.projectDir/hotFix.txt")
    def contextList = [];
    readme.eachLine("UTF-8"){ contextList.push(it) }
    contextList.each {
		println it
    }    
}

task copyHotFix(type:Copy) {
	childProjects.each {key, value ->
		from "$value.projectDir/bin"
		into "$project.buildDir/hotFix"
		//include '**/*.class'
		include {details ->
			println details.file.name
			details.file.name.endsWith('.class')
		}
	}
}